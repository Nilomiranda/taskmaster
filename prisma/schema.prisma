// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// about schema and data model https://www.prisma.io/docs/concepts/components/prisma-schema/data-model

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  email       String        @unique
  password    String
  name        String
  tasks       Task[]
  taskTags    TaskTag[]
  taskComment TaskComment[]
}

model Task {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  name          String
  description   String?
  status        TaskStatus
  user          User          @relation(fields: [userId], references: [id])
  userId        String        @db.ObjectId
  tagsIDs       String[]      @db.ObjectId
  tags          TaskTag[]     @relation(fields: [tagsIDs], references: [id])
  taskComment   TaskComment[]
  taskCommentId String?       @db.ObjectId
}

enum TaskStatus {
  ONGOING
  CRITICAL
  COMPLETED
}

model TaskTag {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  color     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  tasks     Task[]   @relation(fields: [taskIDs], references: [id])
  taskIDs   String[] @db.ObjectId
}

model TaskComment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  task      Task     @relation(fields: [taskID], references: [id])
  taskID    String   @db.ObjectId
}
